from alpha_vantage.foreignexchange import ForeignExchangeimport pandas as pdfrom alpha_vantage.techindicators import TechIndicatorsimport matplotlib.pyplot as pltfrom pprint import pprintimport timeimport pymysqlimport numpy as npimport matplotlib.dates as mdatesfrom itertools import countfrom matplotlib.animation import FuncAnimationplt.style.use("fivethirtyeight")api_key = '1456af4c4704e5e6bd4b60c30094b56b-32c375f91dc677c9fce0916d50811d4f'cc = ForeignExchange(key=api_key)data, _ = cc.get_currency_exchange_intraday(from_symbol='EUR', to_symbol='USD', interval="1min", outputsize='compact')converteddata = str(data)connection = pymysql.connect(host="localhost", user="root", password="Rodsader1*", db="forextrade")cursor = connection.cursor()# sql5 = "insert into timeprice(timedata) values (substring(%s from 10794 for 19))"# sql6 = "insert into closeprice(closedata) values (substring(%s from 10892 for 6))"# sql7 = "insert into openprice(opendata) values (substring(%s from 10829 for 6))"sql8 = "select closedata from closeprice"sql9 = "select timedata from timeprice"sql10 = "select opendata from openprice"sql11 = "select trendlinedata from trendline"sql12 = "select toptrendlinedata from trendlinetop"# looplist = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]## for i in looplist:#     cursor.execute(sql5, converteddata)#     cursor.execute(sql6, converteddata)#     cursor.execute(sql7, converteddata)#     print("insert successful")#     connection.commit()#     time.sleep(70)# cursor.execute(sql5, converteddata)# cursor.execute(sql6, converteddata)# cursor.execute(sql7, converteddata)# print("insert successful")# connection.commit()# closevalues = []# cursor.execute(sql8)# for row in cursor.fetchall():#     closevalues.append(float(row[0]))## timevalues = []# cursor.execute(sql9)# for rowz in cursor.fetchall():#     timevalues.append(rowz[0])## openvalues = []# cursor.execute(sql10)# for rowzz in cursor.fetchall():#     openvalues.append(float(rowzz[0]))# ## x = timevalues# y = closevalues# z = openvalueslistloop = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]def animate(i):    global closevalues    closevalues = []    cursor.execute(sql8)    for row in cursor.fetchall():        closevalues.append(row[0])    global timevalues    timevalues = []    cursor.execute(sql9)    for rowz in cursor.fetchall():        timevalues.append(rowz[0])    global openvalues    openvalues = []    cursor.execute(sql10)    for rowzz in cursor.fetchall():        openvalues.append(rowzz[0])    global linevalues    linevalues = []    cursor.execute(sql11)    for rowzzz in cursor.fetchall():        linevalues.append(rowzzz[0])    global toplinevalues    toplinevalues = []    cursor.execute(sql12)    for roww in cursor.fetchall():        toplinevalues.append(roww[0])    global x    global y    global z    global w    global v    x = timevalues    y = closevalues    z = openvalues    w = linevalues    v = toplinevalues    plt.cla()    plt.plot(x, y, label="Closing Price")    plt.plot(x, z, label="Opening Price")    plt.plot(x, w, label=" Bottom Trendline")    plt.plot(x, v, label="Top Trendline")    plt.legend(loc="upper left")    plt.tight_layout()ani = FuncAnimation(plt.gcf(), animate, interval=60000)# x = timevalues# y = closevalues# z = openvalues# print(closevalues)# print(timevalues)#plt.tight_layout()# plt.plot(x, y, z)plt.show()connection.close()# connection.commit()# connection.close()# for i in looplist:#     print(data)#     time.sleep(60)# time.sleep(60)# pprint(data)# df = pd.DataFrame(data)# print(df)# df.plot()